File Name Timestamp Styles:
Android: Screenshot_20201028-141626_Messages.jpg
year_month_day-24hour_minute_seconds

OBS: 2021-01-04 14-39-52.mkv
year-month-day 24hour_minute_seconds

##### remove '-' and 'spaces' from these file names, then use other code to convert to datetime.

get unsortedDir and destinationDir from user.

for subDir, _, files in os.walk(unsortedDir):
    for file in files:

        originalFilePath = subDir + "/" + file
        newFilePath = destinationDir + "/" + file

        if jpg or png in file name:
            if takenDate == None: # Can't find/doesn't have.
                Check multiple different ways if the file name has a timestamp in it. If so:
                    write it to the file metadata first
                    takenDate = file name timestamp
                else: # If there isn't ANY time taken metadata
                    takenDate = time right now

            else: # If the image does have embedded metadata
                takenDate = get date from file

        elif mp4 or mkv:
            same as above, but will be different because of different libraries or whatever

    Move the file to the user's desired directory, based on takenDate, and regardless of where that date came from.
    // should there be an 'unknown' folder?
    SQL INSERT INTO photos newFilePath, time_right_now, takenDate, -1