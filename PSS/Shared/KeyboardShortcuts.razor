@implements IDisposable 
@using Toolbelt.Blazor.HotKeys
@inject HotKeys HotKeys

@code {
    public void Dispose() => HotKeysContext.Dispose();

    HotKeysContext HotKeysContext;

    [Parameter]
    public Action CtrlD { get; set; }
    
    [Parameter]
    public Action CtrlE { get; set; }
    
    [Parameter]
    public Action AltA { get; set; }
    
    [Parameter]
    public Action AltS { get; set; }
    
    protected override void OnInitialized()
    {
        HotKeysContext = HotKeys.CreateContext()
            .Add(ModKeys.Ctrl, Keys.D, CtrlD)
            .Add(ModKeys.Ctrl, Keys.E, CtrlE)
            // .Add(ModKeys.Ctrl, Keys.Slash, () => ShortcutsReference.visibility = ShortcutsReference.visibility == "hidden" ? "visible" : "hidden")
            .Add(ModKeys.Alt, Keys.A, AltA)
            .Add(ModKeys.Alt, Keys.S, AltS);        
    }
}