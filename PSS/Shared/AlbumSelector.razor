@* Reusable component that allows user to choose album(s) to add selected items to *@
@using static PSS.Backend.Connection
<link href="/css/components/AlbumSelector.css" rel="stylesheet">

<div id="albumSelector" style="visibility: @AlbumsVis">
    <button class="iconBtn" id="closeBtn" @onclick="CloseBtnClick"><span class="material-icons-outlined">close</span></button>
    <button class="iconBtn" id="confirmBtn" @onclick="ConfirmBtnClick"><span class="material-icons-outlined">check</span></button>
    <span id="addToText">Add to</span>
    <AlbumCreator Albums="@(albums.Concat(folders))"/>

    <div class="albumsList">
        @for (int i = 0; i < albums.Count; i++)
        {
            int ii = i;
            <div @onclick="@(() => checkedAlbums[ii] = !checkedAlbums[ii])" class="album">
                <div class="coverDiv">
                    <img class="cover" src="@Settings.requestPath/@albums[i].albumCover" alt="">
                </div>
                <input type="checkbox" id="@i" @bind="@checkedAlbums[ii]" @bind:event="oninput">
                <span title="@albums[i].name">@albums[i].name</span>
            </div>
        }
    </div>
</div>

@code {
    private static List<Album> albums = GetAlbumsTable(true, false);
    private static List<Album> folders = GetAlbumsTable(false, true);

    private static List<bool> checkedAlbums;
    private static int checkedFolderIndex; //Which index in folders is checked (can only have 1 checked (true)).
    
    protected override void OnInitialized()
    {
        AlbumsVis = "hidden";
        HeaderVis = "hidden";
        albums = GetAlbumsTable(true, true);
        checkedAlbums = (from album in albums select new bool()).ToList();
    }
}