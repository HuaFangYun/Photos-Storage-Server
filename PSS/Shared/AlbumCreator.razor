@* Reusable component for a simple interface to create new albums and folders *@
@using static PSS.Backend.Connection
<link href="/css/components/AlbumCreator.css" rel="stylesheet">

<div id="albumCreator">
    <button class="textBtn" @onclick="NewAlbumBtnClick"><span class="material-icons-outlined">@newAlbumBtnIcon</span><span class="btnText">@newAlbumBtnText</span></button>
    <input type="text" placeholder="@("Enter new " + (folderChecked ? "folder" : "album") + " name")" @bind="newAlbumName" style="display: @albumInputDisplay"/>
    <button class="iconBtn" @onclick="ConfirmBtnClick" style="display: @confirmBtnDisplay"><span class="material-icons-outlined">check</span></button>

    <div style="display: @confirmBtnDisplay">
        <input style="margin-left: 12px" type="checkbox" @bind="@folderChecked">
        <span @onclick="@(() => folderChecked = !folderChecked)" style="margin-left: 1px;">Folder?</span>
    </div>
</div>

@code {
    [Parameter, EditorRequired]
    public List<Album> Albums { get; set; }
        
    private static string newAlbumBtnIcon;
    private static string albumInputDisplay;
    private static string confirmBtnDisplay;
    private static string newAlbumBtnText;
    private static string newAlbumName;
    private static bool folderChecked;
    
    protected override void OnInitialized()
    {
        newAlbumBtnIcon = "library_add";
        newAlbumBtnText = "New Album";
        albumInputDisplay = "none";
        folderChecked = false;
        confirmBtnDisplay = "none";
    }
    
    private void NewAlbumBtnClick()
    {
        if (newAlbumBtnText == "New Album")
        {
            newAlbumBtnIcon = "close";
            newAlbumBtnText = "Cancel";
            albumInputDisplay = "inline";
            confirmBtnDisplay = "flex";
        }
        else if (newAlbumBtnText == "Cancel")
        {
            newAlbumBtnIcon = "library_add";
            newAlbumBtnText = "New Album";
            albumInputDisplay = "none";
            confirmBtnDisplay = "none";
            newAlbumName = "";
        }
    }
    
    private void ConfirmBtnClick()
    {
        if (String.IsNullOrWhiteSpace(newAlbumName) || Albums.Select(n => n.name).Contains(newAlbumName))
        {
            newAlbumName = "Invalid Album Name!";
            return;
        }

        CreateAlbum(newAlbumName, folderChecked);
        newAlbumName = ""; //Reset for next time
        newAlbumBtnIcon = "library_add";
        newAlbumBtnText = "New Album";
        albumInputDisplay = "none";
        confirmBtnDisplay = "none";
        folderChecked = false;
    }
}