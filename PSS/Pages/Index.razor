@page "/"
@using static PSS.Backend.Connection

<link href="css/IndexNew.css" rel="stylesheet"/>

@{
    <header style="visibility: @headerVis">
        <button><svg width="24px" height="24px" class="material-icons" style="fill: white;" viewBox="0 0 24 24"><path d="M15 4V3H9v1H4v2h1v13c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V6h1V4h-5zm2 15H7V6h10v13zM9 8h2v9H9zm4 0h2v9h-2z"></path></svg></button>
        <button><span class="material-icons-outlined">perm_media</span></button>
        <button><span class="material-icons-outlined">archive</span></button>
        <button><span class="material-icons-outlined">star_outline</span></button>
        <button><span class="material-icons-outlined">collections</span></button>
        <span id="selectedAmtText" style="visibility: @headerVis">@selectedItems.Count selected</span>
        <button id="clearBtn" @onclick="ClearChecks"><span class="material-icons-outlined">close</span></button>
    </header>
    
    <div id="albumSelector">
        @*TODO: when this shown either just have onabort simple x button, and/or when click outside div, close. gonna need a confirm btn too*@
        <button id="closeBtn"><span class="material-icons-outlined">close</span></button>
        <span id="addToText">Add to</span>
    </div>

    if (mediaList.Count == 0)
    {
        <h1>Looks empty here...<br/>Upload some items to get started.</h1>
    }
    else
    {
        <div id="mainDiv">
            @foreach (MediaRow media in mediaList)
            {
                <div class="thumbnail">
                    <span @onclick="(() => ToggleCheck(media.uuid))" id="@media.uuid" class="material-icons unchecked">check_circle</span>
                    <img style="color: white" src="@PSS.Settings.requestPath/@media.path" onclick="location.href = '/view/@media.uuid'" alt="@PSS.Settings.requestPath/@media.path" loading="lazy"/>
                </div>
            }
        </div>
    }
}

@code {
    private static string headerVis;
    private static readonly List<MediaRow> mediaList = LoadMediaTable();
    private static List<Guid> selectedItems; //Stores Guids of all items user selected. If unchecked, removed from list.

    protected override void OnInitialized()
    {
        selectedItems = new List<Guid>(); //Reset on page load/refresh
        headerVis = "hidden";
    }

    [Inject] //https://code-maze.com/how-to-call-javascript-code-from-net-blazor-webassembly/
    public IJSRuntime JSRuntime { get; set; }

    private async Task ToggleCheck(Guid uuid)
    {
        string newClass = await JSRuntime.InvokeAsync<string>("toggleCheck", uuid);
        if (newClass.Contains("unchecked"))
            selectedItems.Remove(uuid);
        else
            selectedItems.Add(uuid);

        headerVis = selectedItems.Count > 0 ? "visible" : "hidden";
    }

    private async Task ClearChecks()
    {
        foreach (Guid uuid in selectedItems)
            await JSRuntime.InvokeAsync<string>("removeCheck", uuid);
        selectedItems.Clear();
        headerVis = "hidden";
    }
}